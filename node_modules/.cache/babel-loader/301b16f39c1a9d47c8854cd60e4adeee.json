{"ast":null,"code":"import _slicedToArray from \"/home/wilder/PROJET/Projet2/reims-0919-js-github-battle/gitvs/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wilder/PROJET/Projet2/reims-0919-js-github-battle/gitvs/src/components/ResultOfFight.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1\n  }\n});\n\nfunction LinearDeterminate(props) {\n  const commit1 = props.firstUserRepos;\n  const commit2 = props.secondUserRepos;\n  const commitotal = commit1 + commit2;\n  const commitPercent = commit1 / commitotal * 100;\n  const percentDecimal = Math.round(commitPercent * 1) / 1;\n  const percentSecondUser = Math.round((100 - commitPercent) * 1) / 1;\n  const follower1 = props.firstUserFollowers;\n  const follower2 = props.secondUserFollowers;\n  const followertotal = follower1 + follower2;\n  const followerPercent = follower1 / followertotal * 100;\n  const followerDecimal = Math.round(followerPercent * 1) / 1;\n  const followerSecondUser = Math.round((100 - followerPercent) * 1) / 1;\n  const publicGists1 = props.firstUserPublic_Gists;\n  const publicGists2 = props.secondUserPublic_Gists;\n  const publicGistsTotal = publicGists1 + publicGists2;\n  const publicGistsPercent = publicGists1 / publicGistsTotal * 100;\n  const publicGistsDecimal = Math.round(publicGistsPercent * 1) / 1;\n  const publicGistsSecondUser = Math.round((100 - publicGistsPercent) * 1) / 1;\n  const resultUser1 = (percentDecimal + followerDecimal + publicGistsDecimal) / 3;\n  const resultUser2 = (percentSecondUser + followerSecondUser + publicGistsSecondUser) / 3;\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        completed = _React$useState2[0],\n        setCompleted = _React$useState2[1];\n\n  React.useEffect(() => {\n    function progress() {\n      setCompleted(oldCompleted => {\n        if (oldCompleted === 100) {\n          return 100;\n        }\n\n        const diff = Math.random() * 10;\n        return Math.min(oldCompleted + diff, resultUser1);\n      });\n    }\n\n    const timer = setInterval(progress, 1500);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"commitBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"firstUserResult\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, resultUser1, \"%\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"/\"), React.createElement(\"p\", {\n    className: \"secondUserResult\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, resultUser2, \"%\")), React.createElement(LinearProgress, {\n    className: \"commitBarResult\",\n    id: \"progressBar\",\n    variant: \"determinate\",\n    value: completed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n}\n\nexport default LinearDeterminate;","map":{"version":3,"sources":["/home/wilder/PROJET/Projet2/reims-0919-js-github-battle/gitvs/src/components/ResultOfFight.js"],"names":["React","makeStyles","LinearProgress","useStyles","root","flexGrow","LinearDeterminate","props","commit1","firstUserRepos","commit2","secondUserRepos","commitotal","commitPercent","percentDecimal","Math","round","percentSecondUser","follower1","firstUserFollowers","follower2","secondUserFollowers","followertotal","followerPercent","followerDecimal","followerSecondUser","publicGists1","firstUserPublic_Gists","publicGists2","secondUserPublic_Gists","publicGistsTotal","publicGistsPercent","publicGistsDecimal","publicGistsSecondUser","resultUser1","resultUser2","classes","useState","completed","setCompleted","useEffect","progress","oldCompleted","diff","random","min","timer","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n})\n\n\nfunction LinearDeterminate(props) {\n  const commit1 = props.firstUserRepos\n  const commit2 = props.secondUserRepos\n  const commitotal = (commit1 + commit2)\n  const commitPercent = (commit1 / commitotal) * 100\n  const percentDecimal = Math.round(commitPercent * 1) / 1\n  const percentSecondUser = Math.round((100 - commitPercent) * 1) / 1\n\n  const follower1 = props.firstUserFollowers\n  const follower2 = props.secondUserFollowers\n  const followertotal = (follower1 + follower2)\n  const followerPercent = (follower1 / followertotal) * 100\n  const followerDecimal = Math.round(followerPercent * 1) / 1\n  const followerSecondUser = Math.round((100 - followerPercent) * 1) / 1\n\n  const publicGists1 = props.firstUserPublic_Gists\n  const publicGists2 = props.secondUserPublic_Gists\n  const publicGistsTotal = (publicGists1 + publicGists2)\n  const publicGistsPercent = (publicGists1 / publicGistsTotal) * 100\n  const publicGistsDecimal = Math.round(publicGistsPercent * 1) / 1\n  const publicGistsSecondUser = Math.round((100 - publicGistsPercent) * 1) / 1\n\n  const resultUser1 = (percentDecimal + followerDecimal + publicGistsDecimal) / 3\n  const resultUser2 = (percentSecondUser + followerSecondUser + publicGistsSecondUser) / 3\n  const classes = useStyles()\n  const [completed, setCompleted] = React.useState(0)\n\n  React.useEffect(() => {\n    function progress() {\n      setCompleted((oldCompleted) => {\n        if (oldCompleted === 100) {\n          return 100\n        }\n        const diff = Math.random() * 10\n        return Math.min(oldCompleted + diff, resultUser1)\n      })\n    }\n\n    const timer = setInterval(progress, 1500)\n    return () => {\n      clearInterval(timer)\n    }\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <div className=\"commitBar\">\n          <p className=\"firstUserResult\">\n            {resultUser1}\n%\n          </p>\n          <p>/</p>\n          <p className=\"secondUserResult\">\n            {resultUser2}\n%\n          </p>\n        </div>\n        <LinearProgress className=\"commitBarResult\" id=\"progressBar\" variant=\"determinate\" value={completed} />\n      </div>\n      <br />\n\n\n    </div>\n  )\n}\n\nexport default LinearDeterminate\n"]},"metadata":{},"sourceType":"module"}