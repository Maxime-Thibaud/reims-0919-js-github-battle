{"ast":null,"code":"import _defineProperty from \"/home/wilder/PROJET/Projet2/reims-0919-js-github-battle/gitvs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst languagesIn = repos => repos.reduce((acc, repo) => acc.filter(repoInAcc => repoInAcc.language === repo.language).length ? acc.map(repoInAcc => repoInAcc.language === repo.language ? _objectSpread({}, repoInAcc, {\n  count: repoInAcc.count + 1\n}) : repoInAcc) : [...acc, {\n  language: repo.language,\n  count: 1\n}], []);\n\nconst maxIn = languages => languages.reduce((result, language) => {\n  if (language.count >= result.count) {\n    return {\n      count: language.count,\n      winnerLanguage: language.language\n    };\n  }\n\n  return result;\n}, {\n  count: 0,\n  winnerLanguage: null\n}).winnerLanguage;\n\nconst filterLanguages = repos => {\n  const languages = languagesIn(repos);\n  return maxIn(languages);\n};\n\nexport default filterLanguages;","map":{"version":3,"sources":["/home/wilder/PROJET/Projet2/reims-0919-js-github-battle/gitvs/src/components/filterLanguages.js"],"names":["languagesIn","repos","reduce","acc","repo","filter","repoInAcc","language","length","map","count","maxIn","languages","result","winnerLanguage","filterLanguages"],"mappings":";;;;;;AAAA,MAAMA,WAAW,GAAIC,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAa,CAACC,GAAD,EAAMC,IAAN,KAC1CD,GAAG,CAACE,MAAJ,CAAYC,SAAD,IAAeA,SAAS,CAACC,QAAV,KAAuBH,IAAI,CAACG,QAAtD,EAAgEC,MAAhE,GACIL,GAAG,CAACM,GAAJ,CACCH,SAAD,IACEA,SAAS,CAACC,QAAV,KAAuBH,IAAI,CAACG,QAA5B,qBACSD,SADT;AACoBI,EAAAA,KAAK,EAAEJ,SAAS,CAACI,KAAV,GAAkB;AAD7C,KAEIJ,SAJN,CADJ,GAQI,CACA,GAAGH,GADH,EAEA;AACEI,EAAAA,QAAQ,EAAEH,IAAI,CAACG,QADjB;AAEEG,EAAAA,KAAK,EAAE;AAFT,CAFA,CATyB,EAgB5B,EAhB4B,CAA/B;;AAkBA,MAAMC,KAAK,GAAIC,SAAD,IAAeA,SAAS,CAACV,MAAV,CAAiB,CAACW,MAAD,EAASN,QAAT,KAAsB;AAClE,MAAIA,QAAQ,CAACG,KAAT,IAAkBG,MAAM,CAACH,KAA7B,EAAoC;AAClC,WAAO;AAAEA,MAAAA,KAAK,EAAEH,QAAQ,CAACG,KAAlB;AAAyBI,MAAAA,cAAc,EAAEP,QAAQ,CAACA;AAAlD,KAAP;AACD;;AACD,SAAOM,MAAP;AACD,CAL4B,EAK1B;AAAEH,EAAAA,KAAK,EAAE,CAAT;AAAYI,EAAAA,cAAc,EAAE;AAA5B,CAL0B,EAKUA,cALvC;;AAOA,MAAMC,eAAe,GAAId,KAAD,IAAW;AACjC,QAAMW,SAAS,GAAGZ,WAAW,CAACC,KAAD,CAA7B;AACA,SAAOU,KAAK,CAACC,SAAD,CAAZ;AACD,CAHD;;AAKA,eAAeG,eAAf","sourcesContent":["const languagesIn = (repos) => repos.reduce((acc, repo) => (\n  acc.filter((repoInAcc) => repoInAcc.language === repo.language).length\n    ? acc.map(\n      (repoInAcc) => (\n        repoInAcc.language === repo.language\n          ? { ...repoInAcc, count: repoInAcc.count + 1 }\n          : repoInAcc\n      ),\n    )\n    : [\n      ...acc,\n      {\n        language: repo.language,\n        count: 1,\n      },\n    ]\n), [])\n\nconst maxIn = (languages) => languages.reduce((result, language) => {\n  if (language.count >= result.count) {\n    return { count: language.count, winnerLanguage: language.language }\n  }\n  return result\n}, { count: 0, winnerLanguage: null }).winnerLanguage\n\nconst filterLanguages = (repos) => {\n  const languages = languagesIn(repos)\n  return maxIn(languages)\n}\n\nexport default filterLanguages\n"]},"metadata":{},"sourceType":"module"}