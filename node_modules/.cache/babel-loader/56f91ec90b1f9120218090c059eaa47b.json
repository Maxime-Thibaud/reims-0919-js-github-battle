{"ast":null,"code":"import _slicedToArray from \"/home/wilder/PROJET/Projet2/reims-0919-js-github-battle/gitvs/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wilder/PROJET/Projet2/reims-0919-js-github-battle/gitvs/src/components/Follower.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport './progressBar.css';\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1\n  }\n});\n\nfunction LinearDeterminate(props) {\n  const follower1 = props.firstUserFollowers;\n  const follower2 = props.secondUserFollowers;\n  const followertotal = follower1 + follower2;\n  const followerPercent = follower1 / followertotal * 100;\n  const followerDecimal = Math.round(followerPercent * 1) / 1;\n  const followerSecondUser = Math.round((100 - followerPercent) * 1) / 1;\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        completed = _React$useState2[0],\n        setCompleted = _React$useState2[1];\n\n  React.useEffect(() => {\n    function progress() {\n      setCompleted(oldCompleted => {\n        if (oldCompleted === 100) {\n          return 100;\n        }\n\n        const diff = Math.random() * 10;\n        return Math.min(oldCompleted + diff, followerDecimal);\n      });\n    }\n\n    const timer = setInterval(progress, 100);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"commitBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"firstUserResult\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, followerDecimal, \"%\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"/\"), React.createElement(\"p\", {\n    className: \"secondUserResult\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, followerSecondUser, \"%\")), React.createElement(LinearProgress, {\n    id: \"progressBar\",\n    variant: \"determinate\",\n    value: completed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n}\n\nexport default LinearDeterminate;","map":{"version":3,"sources":["/home/wilder/PROJET/Projet2/reims-0919-js-github-battle/gitvs/src/components/Follower.js"],"names":["React","makeStyles","LinearProgress","useStyles","root","flexGrow","LinearDeterminate","props","follower1","firstUserFollowers","follower2","secondUserFollowers","followertotal","followerPercent","followerDecimal","Math","round","followerSecondUser","classes","useState","completed","setCompleted","useEffect","progress","oldCompleted","diff","random","min","timer","setInterval","clearInterval"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAO,mBAAP;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAC;AAC3BG,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AADqB,CAAD,CAA5B;;AAOA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC,QAAMC,SAAS,GAAGD,KAAK,CAACE,kBAAxB;AACA,QAAMC,SAAS,GAAGH,KAAK,CAACI,mBAAxB;AACA,QAAMC,aAAa,GAAIJ,SAAS,GAAGE,SAAnC;AACA,QAAMG,eAAe,GAAIL,SAAS,GAAGI,aAAb,GAA8B,GAAtD;AACA,QAAME,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWH,eAAe,GAAG,CAA7B,IAAkC,CAA1D;AACA,QAAMI,kBAAkB,GAAGF,IAAI,CAACC,KAAL,CAAW,CAAC,MAAMH,eAAP,IAA0B,CAArC,IAA0C,CAArE;AAGA,QAAMK,OAAO,GAAGf,SAAS,EAAzB;;AATgC,0BAUEH,KAAK,CAACmB,QAAN,CAAe,CAAf,CAVF;AAAA;AAAA,QAUzBC,SAVyB;AAAA,QAUdC,YAVc;;AAYhCrB,EAAAA,KAAK,CAACsB,SAAN,CAAgB,MAAM;AACpB,aAASC,QAAT,GAAoB;AAClBF,MAAAA,YAAY,CAAEG,YAAD,IAAkB;AAC7B,YAAIA,YAAY,KAAK,GAArB,EAA0B;AACxB,iBAAO,GAAP;AACD;;AACD,cAAMC,IAAI,GAAGV,IAAI,CAACW,MAAL,KAAgB,EAA7B;AACA,eAAOX,IAAI,CAACY,GAAL,CAASH,YAAY,GAAGC,IAAxB,EAA8BX,eAA9B,CAAP;AACD,OANW,CAAZ;AAOD;;AAED,UAAMc,KAAK,GAAGC,WAAW,CAACN,QAAD,EAAW,GAAX,CAAzB;AACA,WAAO,MAAM;AACXO,MAAAA,aAAa,CAACF,KAAD,CAAb;AACD,KAFD;AAGD,GAfD,EAeG,EAfH;AAiBA,SACE;AAAK,IAAA,SAAS,EAAEV,OAAO,CAACd,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,eADH,MADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALF,EAME;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,kBADH,MANF,CADF,EAYE,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAC,aAAnB;AAAiC,IAAA,OAAO,EAAC,aAAzC;AAAuD,IAAA,KAAK,EAAEG,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAqBD;;AAED,eAAed,iBAAf","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport './progressBar.css'\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n})\n\n\nfunction LinearDeterminate(props) {\n  const follower1 = props.firstUserFollowers\n  const follower2 = props.secondUserFollowers\n  const followertotal = (follower1 + follower2)\n  const followerPercent = (follower1 / followertotal) * 100\n  const followerDecimal = Math.round(followerPercent * 1) / 1\n  const followerSecondUser = Math.round((100 - followerPercent) * 1) / 1\n\n\n  const classes = useStyles()\n  const [completed, setCompleted] = React.useState(0)\n\n  React.useEffect(() => {\n    function progress() {\n      setCompleted((oldCompleted) => {\n        if (oldCompleted === 100) {\n          return 100\n        }\n        const diff = Math.random() * 10\n        return Math.min(oldCompleted + diff, followerDecimal)\n      })\n    }\n\n    const timer = setInterval(progress, 100)\n    return () => {\n      clearInterval(timer)\n    }\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <div className=\"commitBar\">\n          <p className=\"firstUserResult\">\n            {followerDecimal}\n%\n          </p>\n          <p>/</p>\n          <p className=\"secondUserResult\">\n            {followerSecondUser}\n%\n          </p>\n        </div>\n        <LinearProgress id=\"progressBar\" variant=\"determinate\" value={completed} />\n      </div>\n      <br />\n\n\n    </div>\n  )\n}\n\nexport default LinearDeterminate\n"]},"metadata":{},"sourceType":"module"}