{"ast":null,"code":"import _slicedToArray from \"/home/wilder/PROJET/Projet2/reims-0919-js-github-battle/gitvs/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wilder/PROJET/Projet2/reims-0919-js-github-battle/gitvs/src/components/Follower.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { yellow } from \"@material-ui/core/colors\";\nconst follower1 = 402;\nconst follower2 = 345;\nconst followertotal = follower1 + follower2;\nconst followerPercent = follower1 / followertotal * 100;\nexport const followerDecimal = Math.round(followerPercent * 1) / 1;\nexport const followerSecondUser = Math.round((100 - followerPercent) * 1) / 1;\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1\n  }\n});\n\nfunction LinearDeterminate() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        completed = _React$useState2[0],\n        setCompleted = _React$useState2[1];\n\n  React.useEffect(() => {\n    function progress() {\n      setCompleted(oldCompleted => {\n        if (oldCompleted === 100) {\n          return 100;\n        }\n\n        const diff = Math.random() * 10;\n        return Math.min(oldCompleted + diff, followerDecimal);\n      });\n    }\n\n    const timer = setInterval(progress, 600);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"commitBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"firstUserResult\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, followerDecimal, \"%\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"/\"), React.createElement(\"p\", {\n    className: \"secondUserResult\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, followerSecondUser, \"%\")), React.createElement(LinearProgress, {\n    id: \"progressBar\",\n    variant: \"determinate\",\n    value: completed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n}\n\nconsole.log(followerPercent + '%');\nexport default LinearDeterminate;","map":{"version":3,"sources":["/home/wilder/PROJET/Projet2/reims-0919-js-github-battle/gitvs/src/components/Follower.js"],"names":["React","makeStyles","LinearProgress","yellow","follower1","follower2","followertotal","followerPercent","followerDecimal","Math","round","followerSecondUser","useStyles","root","flexGrow","LinearDeterminate","classes","useState","completed","setCompleted","useEffect","progress","oldCompleted","diff","random","min","timer","setInterval","clearInterval","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AAGA,MAAMC,SAAS,GAAE,GAAjB;AACA,MAAMC,SAAS,GAAE,GAAjB;AACA,MAAMC,aAAa,GAAGF,SAAS,GAAGC,SAAlC;AACA,MAAME,eAAe,GAAGH,SAAS,GAACE,aAAX,GAA4B,GAAnD;AACA,OAAO,MAAME,eAAe,GAAEC,IAAI,CAACC,KAAL,CAAWH,eAAe,GAAC,CAA3B,IAA8B,CAArD;AACP,OAAO,MAAMI,kBAAkB,GAACF,IAAI,CAACC,KAAL,CAAW,CAAC,MAAIH,eAAL,IAAsB,CAAjC,IAAoC,CAA7D;AAIP,MAAMK,SAAS,GAAGX,UAAU,CAAC;AAC3BY,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AADqB,CAAD,CAA5B;;AAOC,SAASC,iBAAT,GAA6B;AAC5B,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;;AAD4B,0BAEMZ,KAAK,CAACiB,QAAN,CAAe,CAAf,CAFN;AAAA;AAAA,QAErBC,SAFqB;AAAA,QAEVC,YAFU;;AAI5BnB,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpB,aAASC,QAAT,GAAoB;AAClBF,MAAAA,YAAY,CAACG,YAAY,IAAI;AAC3B,YAAIA,YAAY,KAAK,GAArB,EAA0B;AACxB,iBAAO,GAAP;AACD;;AACD,cAAMC,IAAI,GAAGd,IAAI,CAACe,MAAL,KAAgB,EAA7B;AACA,eAAOf,IAAI,CAACgB,GAAL,CAASH,YAAY,GAAGC,IAAxB,EAA8Bf,eAA9B,CAAP;AACD,OANW,CAAZ;AAOD;;AAED,UAAMkB,KAAK,GAAGC,WAAW,CAACN,QAAD,EAAW,GAAX,CAAzB;AACA,WAAO,MAAM;AACXO,MAAAA,aAAa,CAACF,KAAD,CAAb;AACD,KAFD;AAGD,GAfD,EAeG,EAfH;AAiBA,SACE;AAAK,IAAA,SAAS,EAAEV,OAAO,CAACH,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCL,eAAhC,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,EAGI;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCG,kBAAjC,MAHJ,CADF,EAMA,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAC,aAAnB;AAAiC,IAAA,OAAO,EAAC,aAAzC;AAAuD,IAAA,KAAK,EAAEO,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAeD;;AACDW,OAAO,CAACC,GAAR,CAAYvB,eAAe,GAAG,GAA9B;AACA,eAAeQ,iBAAf","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { yellow } from \"@material-ui/core/colors\";\n\n\nconst follower1= 402\nconst follower2= 345\nconst followertotal= (follower1 + follower2)\nconst followerPercent= (follower1/followertotal) * 100\nexport const followerDecimal= Math.round(followerPercent*1)/1\nexport const followerSecondUser=Math.round((100-followerPercent)*1)/1\n\n\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    \n  }\n});\n\n function LinearDeterminate() {\n  const classes = useStyles();\n  const [completed, setCompleted] = React.useState(0);\n\n  React.useEffect(() => {\n    function progress() {\n      setCompleted(oldCompleted => {\n        if (oldCompleted === 100) {\n          return 100;\n        }\n        const diff = Math.random() * 10;\n        return Math.min(oldCompleted + diff, followerDecimal);\n      });\n    }\n\n    const timer = setInterval(progress, 600);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <div className='commitBar'>\n            <p className='firstUserResult'>{followerDecimal}%</p>\n            <p>/</p>\n            <p className='secondUserResult'>{followerSecondUser}%</p>\n        </div>\n      <LinearProgress id='progressBar' variant=\"determinate\" value={completed} />\n      </div>\n      <br />\n     \n    \n    </div>\n  );\n}\nconsole.log(followerPercent + '%')\nexport default LinearDeterminate\n"]},"metadata":{},"sourceType":"module"}